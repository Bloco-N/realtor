// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Fluency {
  BASIC
  INTERMEDIARY
  FLUENT
  NATIVE
}

model Client {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  firstName String
  lastName  String
  Sale      Sale[]
  Comment   Comment[]

  @@map("clients")
}

model Realtor {
  id                 Int               @id @default(autoincrement())
  email              String            @unique
  password           String
  firstName          String
  lastName           String
  introduction       String?
  phone              String?
  whatsapp           String?
  instagram          String?
  twitter            String?
  professional_email String?
  website            String?
  Partnerships       Partnership[]
  Awards             Award[]
  Sales              Sale[]
  Comments           Comment[]
  Properties         Property[]
  RealtorLanguages   RealtorLanguage[]
  RealtorCities      RealtorCity[]

  @@map("realtors")
}

model Agency {
  id                 Int              @id @default(autoincrement())
  email              String           @unique
  password           String
  name               String
  description        String?
  phone              String?
  whatsapp           String?
  instagram          String?
  twitter            String?
  professional_email String?
  website            String?
  addressId          Int
  Address            Address          @relation(fields: [addressId], references: [id])
  Partnerships       Partnership[]
  Properties         Property[]
  AgencyCity         AgencyCity[]
  AgencyLanguage     AgencyLanguage[]

  @@map("agencies")
}

model City {
  id          Int           @id @default(autoincrement())
  name        String
  zip_code    String
  RealtorCity RealtorCity[]
  Address     Address[]
  AgencyCity  AgencyCity[]

  @@map("cities")
}

model Language {
  id               Int               @id @default(autoincrement())
  name             String
  RealtorLanguages RealtorLanguage[]
  AgencyLanguage   AgencyLanguage[]

  @@map("languages")
}

model Course {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  @@map("courses")
}

model Sale {
  id        Int     @id @default(autoincrement())
  realtorId Int
  clientId  Int
  confirmed Boolean @default(false)
  Realtor   Realtor @relation(fields: [realtorId], references: [id])
  Client    Client  @relation(fields: [clientId], references: [id])

  @@map("sales")
}

model Comment {
  id        Int     @id @default(autoincrement())
  realtorId Int
  clientId  Int
  text      String
  rating    Float
  Realtor   Realtor @relation(fields: [realtorId], references: [id])
  Client    Client  @relation(fields: [clientId], references: [id])

  @@map("comments")
}

model Award {
  id        Int      @id @default(autoincrement())
  Realtor   Realtor? @relation(fields: [realtorId], references: [id])
  realtorId Int?

  @@map("awards")
}

model Partnership {
  id        Int       @id @default(autoincrement())
  init      DateTime
  end       DateTime?
  active    Boolean   @default(false)
  Realtor   Realtor   @relation(fields: [realtorId], references: [id])
  Agency    Agency    @relation(fields: [agencyId], references: [id])
  realtorId Int
  agencyId  Int

  @@map("partnerships")
}

model Property {
  id        Int      @id @default(autoincrement())
  link      String
  Realtor   Realtor? @relation(fields: [realtorId], references: [id])
  Agency    Agency?  @relation(fields: [agencyId], references: [id])
  realtorId Int?
  agencyId  Int?

  @@map("properties")
}

model Address {
  id         Int      @id @default(autoincrement())
  number     Int
  street     String
  cityId     Int
  state      String
  complement String
  City       City     @relation(fields: [cityId], references: [id])
  Agency     Agency[]

  @@map("adresses")
}

model RealtorCity {
  id        Int     @id @default(autoincrement())
  cityId    Int
  realtorId Int
  City      City    @relation(fields: [cityId], references: [id])
  Realtor   Realtor @relation(fields: [realtorId], references: [id])

  @@map("realtor_cities")
}

model AgencyCity {
  id       Int    @id @default(autoincrement())
  cityId   Int
  agencyId Int
  City     City   @relation(fields: [cityId], references: [id])
  Agency   Agency @relation(fields: [agencyId], references: [id])

  @@map("agency_cities")
}

model RealtorLanguage {
  id         Int      @id @default(autoincrement())
  realtorId  Int
  languageId Int
  fluency    Fluency
  Realtor    Realtor  @relation(fields: [realtorId], references: [id])
  Language   Language @relation(fields: [languageId], references: [id])

  @@map("realtor_languages")
}

model AgencyLanguage {
  id         Int      @id @default(autoincrement())
  agencyId   Int
  languageId Int
  Lenguage   Language @relation(fields: [languageId], references: [id])
  Agency     Agency   @relation(fields: [agencyId], references: [id])

  @@map("agency_languages")
}
